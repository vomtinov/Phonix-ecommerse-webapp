# Generated by Django 5.1.6 on 2025-03-27 11:22

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0038_alter_cart_options_alter_cart_unique_together_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the offer', max_length=255)),
                ('offer_type', models.CharField(choices=[('PERCENTAGE', 'Percentage Discount'), ('FIXED', 'Fixed Amount Discount')], help_text='Type of discount (Percentage or Fixed)', max_length=20)),
                ('discount', models.DecimalField(decimal_places=2, help_text='Discount amount or percentage', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_date', models.DateTimeField(help_text='Start date of the offer')),
                ('end_date', models.DateTimeField(help_text='End date of the offer')),
                ('status', models.BooleanField(default=True, help_text='Active or Inactive offer')),
                ('scope', models.CharField(choices=[('PRODUCT', 'Product Specific'), ('CATEGORY', 'Category Wide')], help_text='Scope of the offer (Product or Category)', max_length=20)),
                ('category', models.ForeignKey(blank=True, help_text='Category for category-wide offer', null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.category')),
                ('product', models.ForeignKey(blank=True, help_text='Product for product-specific offer', null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.product')),
            ],
            options={
                'ordering': ['-start_date'],
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('scope', 'PRODUCT'), ('product__isnull', False), ('category__isnull', True)), models.Q(('scope', 'CATEGORY'), ('category__isnull', False), ('product__isnull', True)), _connector='OR'), name='valid_offer_scope')],
            },
        ),
    ]
